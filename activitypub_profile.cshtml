@model Pretzel.Logic.Templating.Context.PageContext

@using System.Text;
@using System.IO;
@{
    string outbox = Model.Site.Config["actpub_outbox"].ToString();
    string inbox = Model.Site.Config["actpub_inbox"].ToString();
    string profileUrl = Model.Site.Config["actpub_profileUrl"].ToString();
    string username = Model.Site.Config["actpub_username"].ToString();
    string fullname = Model.Site.Config["actpub_fullname"].ToString();
    string website = Model.Site.Config["actpub_website"].ToString();
    string github = Model.Site.Config["actpub_github"].ToString();
    string icon = Model.Site.Config["actpub_icon"].ToString();
    string created = Model.Site.Config["actpub_created"].ToString();
    string summary = Model.Site.Config["actpub_summary"].ToString();
    string publicKeyFile = Model.Site.Config["actpub_publicKeyFile"].ToString();
    publicKeyFile = Path.Combine(
      Model.Site.SourceFolder,
      publicKeyFile
    );

    var publicKeyBuilder = new StringBuilder();
    foreach( string line in File.ReadAllLines( publicKeyFile ) )
    {
        publicKeyBuilder.Append( line );
        publicKeyBuilder.Append( "\\n" );
    }
    publicKeyBuilder.Remove( publicKeyBuilder.Length - 2, 2 );
}
{
    "@@context": [
      "https://www.w3.org/ns/activitystreams",
      "https://w3id.org/security/v1"
    ],
    "outbox": "@outbox",
    "inbox": "@inbox",
    "preferredUsername": "@username",
    "attachment": [
    {
      "type": "PropertyValue",
      "name": "Website",
      "value": "\u003Ca href=\u0022@(website)\u0022 rel=\u0022me nofollow noopener noreferrer\u0022 target=\u0022_blank\u0022\u003E@(website)\u003C/a\u003E"
    },
    {
      "type": "PropertyValue",
      "name": "GitHub",
      "value": "\u003Ca href=\u0022@(github)\u0022 rel=\u0022me nofollow noopener noreferrer\u0022 target=\u0022_blank\u0022\u003E@(github)\u003C/a\u003E"
    }],
    "icon": [
      "@icon"
    ],
    "url": "@(website)/posts.html",
    "published": "@created",
    "summary": "@summary",
    "id": "@profileUrl",
    "name": "@fullname",
    "discoverable": true,
    "manuallyApprovesFollowers": false,
    "type": "Service",
    "publicKey": {
        "id": "@(profileUrl)#main-key",
        "owner": "@(profileUrl)",
        "publicKeyPem": "@publicKeyBuilder"
    }
}
